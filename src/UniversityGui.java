
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author iri_s
 */
public class UniversityGui extends javax.swing.JFrame {

    /**
     * Creates new form UniversityGui
     */
    public UniversityGui() {
        initComponents();
    }
  University univ = new University();
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        StudentPanel = new javax.swing.JPanel();
        enterstid = new javax.swing.JLabel();
        enterstname = new javax.swing.JLabel();
        inputstid = new javax.swing.JTextField();
        inputstname = new javax.swing.JTextField();
        addstudent = new javax.swing.JButton();
        cancelstudent = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        studentList = new javax.swing.JList<>();
        errorMsgSt = new javax.swing.JLabel();
        deletestudent = new javax.swing.JButton();
        updatestudent = new javax.swing.JButton();
        ProffesorPanel = new javax.swing.JPanel();
        enterinsid = new javax.swing.JLabel();
        enterinsname = new javax.swing.JLabel();
        inputinsid = new javax.swing.JTextField();
        inputinsname = new javax.swing.JTextField();
        addinstructor = new javax.swing.JButton();
        cancelinstructor = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        proffesorList = new javax.swing.JList<>();
        errorMsgIns = new javax.swing.JLabel();
        deleteproffesor = new javax.swing.JButton();
        updateproffesor = new javax.swing.JButton();
        CoursesPanel = new javax.swing.JPanel();
        entercoid = new javax.swing.JLabel();
        enterconame = new javax.swing.JLabel();
        entercocredits = new javax.swing.JLabel();
        inputcoid = new javax.swing.JTextField();
        inputconame = new javax.swing.JTextField();
        inputcocredits = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        courseList = new javax.swing.JList<>();
        addcourse = new javax.swing.JButton();
        cancelcourse = new javax.swing.JButton();
        errorMsgCo = new javax.swing.JLabel();
        deletecourse = new javax.swing.JButton();
        updatecourse = new javax.swing.JButton();
        assignedPanel = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        assnstudentList = new javax.swing.JList<>();
        jScrollPane5 = new javax.swing.JScrollPane();
        assnproffesorList = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        assnstudentList2 = new javax.swing.JList<>();
        jScrollPane7 = new javax.swing.JScrollPane();
        assnproffesorList2 = new javax.swing.JList<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        assignedCoursePanel = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        assncoursesList = new javax.swing.JList<>();
        jScrollPane9 = new javax.swing.JScrollPane();
        assncoursesproffesorList = new javax.swing.JList<>();
        jScrollPane10 = new javax.swing.JScrollPane();
        assncoursesList2 = new javax.swing.JList<>();
        jScrollPane11 = new javax.swing.JScrollPane();
        assncoursesproffesorList2 = new javax.swing.JList<>();
        jButton2 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        updateAssignPanel = new javax.swing.JPanel();
        ProfessorComboBox = new javax.swing.JComboBox<>();
        jScrollPane12 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jScrollPane13 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList<>();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        managestudent = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        manageproffesor = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        managecourses = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        manageassignment = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        managecourseassignment = new javax.swing.JMenuItem();
        jMenu6 = new javax.swing.JMenu();
        updateAssign = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("University Management System");
        setResizable(false);
        getContentPane().setLayout(new java.awt.CardLayout());

        StudentPanel.setBackground(new java.awt.Color(255, 255, 0));
        StudentPanel.setPreferredSize(new java.awt.Dimension(700, 429));
        StudentPanel.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                StudentPanelComponentShown(evt);
            }
        });

        enterstid.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        enterstid.setText("Enter St_Id");

        enterstname.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        enterstname.setText("Enter St Name");

        addstudent.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        addstudent.setText("Add");
        addstudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addstudentActionPerformed(evt);
            }
        });

        cancelstudent.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        cancelstudent.setText("Cancel");
        cancelstudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelstudentActionPerformed(evt);
            }
        });

        studentList.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        studentList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                studentListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(studentList);

        errorMsgSt.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N

        deletestudent.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        deletestudent.setText("Delete");
        deletestudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletestudentActionPerformed(evt);
            }
        });

        updatestudent.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        updatestudent.setText("Update");
        updatestudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatestudentActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout StudentPanelLayout = new javax.swing.GroupLayout(StudentPanel);
        StudentPanel.setLayout(StudentPanelLayout);
        StudentPanelLayout.setHorizontalGroup(
            StudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, StudentPanelLayout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addComponent(addstudent)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cancelstudent)
                .addGap(153, 153, 153)
                .addComponent(updatestudent)
                .addGap(120, 120, 120)
                .addComponent(deletestudent)
                .addGap(66, 66, 66))
            .addGroup(StudentPanelLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(StudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(enterstname, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(enterstid, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(StudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(inputstid, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inputstname, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(212, 212, 212)
                .addGroup(StudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(errorMsgSt, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(97, Short.MAX_VALUE))
        );
        StudentPanelLayout.setVerticalGroup(
            StudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(StudentPanelLayout.createSequentialGroup()
                .addGroup(StudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(StudentPanelLayout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(StudentPanelLayout.createSequentialGroup()
                        .addGap(106, 106, 106)
                        .addGroup(StudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(enterstid)
                            .addComponent(inputstid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37)
                        .addGroup(StudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(inputstname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(enterstname))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 98, Short.MAX_VALUE)
                .addComponent(errorMsgSt, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(97, 97, 97)
                .addGroup(StudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deletestudent)
                    .addComponent(updatestudent)
                    .addComponent(cancelstudent)
                    .addComponent(addstudent))
                .addGap(58, 58, 58))
        );

        getContentPane().add(StudentPanel, "card2");

        ProffesorPanel.setBackground(new java.awt.Color(51, 51, 255));
        ProffesorPanel.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                ProffesorPanelComponentShown(evt);
            }
        });

        enterinsid.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        enterinsid.setText("Enter Ins_Id");

        enterinsname.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        enterinsname.setText("Enter Ins Name");

        addinstructor.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        addinstructor.setText("Add");
        addinstructor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addinstructorActionPerformed(evt);
            }
        });

        cancelinstructor.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        cancelinstructor.setText("Cancel");
        cancelinstructor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelinstructorActionPerformed(evt);
            }
        });

        proffesorList.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        proffesorList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                proffesorListValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(proffesorList);

        errorMsgIns.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N

        deleteproffesor.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        deleteproffesor.setText("Delete");
        deleteproffesor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteproffesorActionPerformed(evt);
            }
        });

        updateproffesor.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        updateproffesor.setText("Update");
        updateproffesor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateproffesorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ProffesorPanelLayout = new javax.swing.GroupLayout(ProffesorPanel);
        ProffesorPanel.setLayout(ProffesorPanelLayout);
        ProffesorPanelLayout.setHorizontalGroup(
            ProffesorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ProffesorPanelLayout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(addinstructor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 125, Short.MAX_VALUE)
                .addComponent(cancelinstructor)
                .addGap(150, 150, 150)
                .addComponent(updateproffesor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 119, Short.MAX_VALUE)
                .addComponent(deleteproffesor)
                .addGap(97, 97, 97))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ProffesorPanelLayout.createSequentialGroup()
                .addGroup(ProffesorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(ProffesorPanelLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(errorMsgIns, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ProffesorPanelLayout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addGroup(ProffesorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(enterinsname, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                            .addComponent(enterinsid, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(29, 29, 29)
                        .addGroup(ProffesorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(inputinsid, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                            .addComponent(inputinsname))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(132, 132, 132))
        );
        ProffesorPanelLayout.setVerticalGroup(
            ProffesorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ProffesorPanelLayout.createSequentialGroup()
                .addGroup(ProffesorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(ProffesorPanelLayout.createSequentialGroup()
                        .addGap(99, 99, 99)
                        .addGroup(ProffesorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(enterinsid)
                            .addComponent(inputinsid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addGroup(ProffesorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(enterinsname)
                            .addComponent(inputinsname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 340, Short.MAX_VALUE))
                    .addGroup(ProffesorPanelLayout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(errorMsgIns, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(103, 103, 103)))
                .addGroup(ProffesorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteproffesor)
                    .addComponent(updateproffesor)
                    .addComponent(cancelinstructor)
                    .addComponent(addinstructor))
                .addGap(48, 48, 48))
        );

        getContentPane().add(ProffesorPanel, "card3");

        CoursesPanel.setBackground(new java.awt.Color(51, 255, 255));
        CoursesPanel.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                CoursesPanelComponentShown(evt);
            }
        });

        entercoid.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        entercoid.setText("Enter Course ID");

        enterconame.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        enterconame.setText("Enter Course Name");

        entercocredits.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        entercocredits.setText("Enter Course Credits");

        courseList.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        courseList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                courseListValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(courseList);

        addcourse.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        addcourse.setText("Add");
        addcourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addcourseActionPerformed(evt);
            }
        });

        cancelcourse.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        cancelcourse.setText("Cancel");
        cancelcourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelcourseActionPerformed(evt);
            }
        });

        errorMsgCo.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N

        deletecourse.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        deletecourse.setText("Delete");
        deletecourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletecourseActionPerformed(evt);
            }
        });

        updatecourse.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        updatecourse.setText("Update");
        updatecourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatecourseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout CoursesPanelLayout = new javax.swing.GroupLayout(CoursesPanel);
        CoursesPanel.setLayout(CoursesPanelLayout);
        CoursesPanelLayout.setHorizontalGroup(
            CoursesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CoursesPanelLayout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addComponent(addcourse)
                .addGap(123, 123, 123)
                .addComponent(cancelcourse)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(updatecourse)
                .addGap(106, 106, 106)
                .addComponent(deletecourse)
                .addGap(86, 86, 86))
            .addGroup(CoursesPanelLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(CoursesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(errorMsgCo, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(CoursesPanelLayout.createSequentialGroup()
                        .addGroup(CoursesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(CoursesPanelLayout.createSequentialGroup()
                                .addComponent(enterconame, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(inputconame, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(CoursesPanelLayout.createSequentialGroup()
                                .addComponent(entercocredits, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(inputcocredits, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(CoursesPanelLayout.createSequentialGroup()
                                .addComponent(entercoid, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)
                                .addComponent(inputcoid, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(141, 141, 141)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(49, 173, Short.MAX_VALUE))
        );
        CoursesPanelLayout.setVerticalGroup(
            CoursesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CoursesPanelLayout.createSequentialGroup()
                .addGroup(CoursesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CoursesPanelLayout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addGroup(CoursesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(entercoid)
                            .addComponent(inputcoid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)
                        .addGroup(CoursesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(enterconame)
                            .addComponent(inputconame, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(CoursesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(entercocredits)
                            .addComponent(inputcocredits, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(CoursesPanelLayout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(81, 81, 81)
                .addComponent(errorMsgCo, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 168, Short.MAX_VALUE)
                .addGroup(CoursesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deletecourse)
                    .addComponent(cancelcourse)
                    .addComponent(updatecourse)
                    .addComponent(addcourse))
                .addGap(68, 68, 68))
        );

        getContentPane().add(CoursesPanel, "card4");

        assignedPanel.setBackground(new java.awt.Color(153, 255, 153));
        assignedPanel.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                assignedPanelComponentShown(evt);
            }
        });

        assnstudentList.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jScrollPane4.setViewportView(assnstudentList);

        assnproffesorList.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        assnproffesorList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane5.setViewportView(assnproffesorList);

        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jLabel1.setText("Lista e Studenteve");

        jLabel2.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jLabel2.setText("Lista e profesoreve");

        jButton1.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jButton1.setText("Assign");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        assnstudentList2.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jScrollPane6.setViewportView(assnstudentList2);

        assnproffesorList2.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        assnproffesorList2.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                assnproffesorList2ValueChanged(evt);
            }
        });
        jScrollPane7.setViewportView(assnproffesorList2);

        jLabel3.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jLabel3.setText("Assigned Students");

        jLabel4.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jLabel4.setText("SelectedProffesor");

        javax.swing.GroupLayout assignedPanelLayout = new javax.swing.GroupLayout(assignedPanel);
        assignedPanel.setLayout(assignedPanelLayout);
        assignedPanelLayout.setHorizontalGroup(
            assignedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(assignedPanelLayout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addGroup(assignedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(assignedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 368, Short.MAX_VALUE)
                .addGroup(assignedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(assignedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(93, 93, 93))
            .addGroup(assignedPanelLayout.createSequentialGroup()
                .addGap(351, 351, 351)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        assignedPanelLayout.setVerticalGroup(
            assignedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(assignedPanelLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(assignedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(assignedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addGroup(assignedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(38, 38, 38)
                .addGroup(assignedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        getContentPane().add(assignedPanel, "card5");

        assignedCoursePanel.setBackground(new java.awt.Color(255, 153, 153));
        assignedCoursePanel.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                assignedCoursePanelComponentShown(evt);
            }
        });

        assncoursesList.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jScrollPane8.setViewportView(assncoursesList);

        assncoursesproffesorList.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        assncoursesproffesorList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane9.setViewportView(assncoursesproffesorList);

        assncoursesList2.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jScrollPane10.setViewportView(assncoursesList2);

        assncoursesproffesorList2.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        assncoursesproffesorList2.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                assncoursesproffesorList2ValueChanged(evt);
            }
        });
        jScrollPane11.setViewportView(assncoursesproffesorList2);

        jButton2.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jButton2.setText("Assign Courses");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jLabel5.setText("Lista e lendeve");

        jLabel6.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jLabel6.setText("Lista e profesoreve");

        jLabel7.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jLabel7.setText("Selected Proffesor");

        jLabel8.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jLabel8.setText("Assigned Courses");

        javax.swing.GroupLayout assignedCoursePanelLayout = new javax.swing.GroupLayout(assignedCoursePanel);
        assignedCoursePanel.setLayout(assignedCoursePanelLayout);
        assignedCoursePanelLayout.setHorizontalGroup(
            assignedCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(assignedCoursePanelLayout.createSequentialGroup()
                .addGroup(assignedCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, assignedCoursePanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(assignedCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(assignedCoursePanelLayout.createSequentialGroup()
                        .addGap(85, 85, 85)
                        .addGroup(assignedCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 386, Short.MAX_VALUE)
                .addGroup(assignedCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(assignedCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(91, 91, 91))
            .addGroup(assignedCoursePanelLayout.createSequentialGroup()
                .addGap(334, 334, 334)
                .addComponent(jButton2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        assignedCoursePanelLayout.setVerticalGroup(
            assignedCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(assignedCoursePanelLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(assignedCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(assignedCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                    .addComponent(jScrollPane9))
                .addGap(33, 33, 33)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(assignedCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addGap(29, 29, 29)
                .addGroup(assignedCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane11, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE)
                    .addComponent(jScrollPane10))
                .addContainerGap(40, Short.MAX_VALUE))
        );

        getContentPane().add(assignedCoursePanel, "card6");

        updateAssignPanel.setBackground(new java.awt.Color(255, 0, 255));
        updateAssignPanel.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                updateAssignPanelComponentShown(evt);
            }
        });

        ProfessorComboBox.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        ProfessorComboBox.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                ProfessorComboBoxComponentShown(evt);
            }
        });
        ProfessorComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProfessorComboBoxActionPerformed(evt);
            }
        });

        jList1.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jScrollPane12.setViewportView(jList1);

        jList2.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jScrollPane13.setViewportView(jList2);

        javax.swing.GroupLayout updateAssignPanelLayout = new javax.swing.GroupLayout(updateAssignPanel);
        updateAssignPanel.setLayout(updateAssignPanelLayout);
        updateAssignPanelLayout.setHorizontalGroup(
            updateAssignPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updateAssignPanelLayout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(126, 126, 126)
                .addComponent(ProfessorComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 154, Short.MAX_VALUE)
                .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(95, 95, 95))
        );
        updateAssignPanelLayout.setVerticalGroup(
            updateAssignPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updateAssignPanelLayout.createSequentialGroup()
                .addGroup(updateAssignPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(updateAssignPanelLayout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addGroup(updateAssignPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane13, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                            .addComponent(jScrollPane12)))
                    .addGroup(updateAssignPanelLayout.createSequentialGroup()
                        .addGap(127, 127, 127)
                        .addComponent(ProfessorComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(314, Short.MAX_VALUE))
        );

        getContentPane().add(updateAssignPanel, "card7");

        jMenu1.setText("Manage Student");

        managestudent.setText("Manage Student");
        managestudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                managestudentActionPerformed(evt);
            }
        });
        jMenu1.add(managestudent);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Manage Proffesor");

        manageproffesor.setText("Manage Proffesor");
        manageproffesor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manageproffesorActionPerformed(evt);
            }
        });
        jMenu2.add(manageproffesor);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Manage Courses");

        managecourses.setText("Manage Courses");
        managecourses.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                managecoursesActionPerformed(evt);
            }
        });
        jMenu3.add(managecourses);

        jMenuBar1.add(jMenu3);

        jMenu4.setText("Assignment");

        manageassignment.setText("Manage Assignment");
        manageassignment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manageassignmentActionPerformed(evt);
            }
        });
        jMenu4.add(manageassignment);

        jMenuBar1.add(jMenu4);

        jMenu5.setText("Course Assign");

        managecourseassignment.setText("Assign Courses");
        managecourseassignment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                managecourseassignmentActionPerformed(evt);
            }
        });
        jMenu5.add(managecourseassignment);

        jMenuBar1.add(jMenu5);

        jMenu6.setText("Update Assign");

        updateAssign.setText("Update Assign");
        updateAssign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateAssignActionPerformed(evt);
            }
        });
        jMenu6.add(updateAssign);

        jMenuBar1.add(jMenu6);

        setJMenuBar(jMenuBar1);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void managestudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_managestudentActionPerformed
        // display student panel and hide proffesor & course panels
       StudentPanel.setVisible(true);
         updateAssignPanel.setVisible(false);
       ProffesorPanel.setVisible(false);
       CoursesPanel.setVisible(false);
       assignedPanel.setVisible(false);
       assignedCoursePanel.setVisible(false);
    }//GEN-LAST:event_managestudentActionPerformed

    private void manageproffesorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manageproffesorActionPerformed
        // display proffesor panel and hide student & course panels
        ProffesorPanel.setVisible(true);
          updateAssignPanel.setVisible(false);
        StudentPanel.setVisible(false);
        CoursesPanel.setVisible(false);
        assignedPanel.setVisible(false);
        assignedCoursePanel.setVisible(false);
    }//GEN-LAST:event_manageproffesorActionPerformed

    private void addstudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addstudentActionPerformed
        // add student if all input fields are not empty
     String stId = inputstid.getText();
     String stName = inputstname.getText();
     
     if(stId.length()<=0 || stName.length()<=0){
     
     errorMsgSt.setVisible(true);
     errorMsgSt.setText("All field inputs are required");
     }
     else{
     //set visible false to error message
     errorMsgSt.setVisible(false);
     
     //add student
     Student student = new Student();
     student.setSt_id(stId);
     student.setName(stName);
     
     Functions.AddElementToList( studentList, student.StringData());
     Functions.ClearTextFields(errorMsgSt, inputstid, inputstname);
     //add student to collection
     univ.getStudents().add(student);
     }
       
    }//GEN-LAST:event_addstudentActionPerformed

   
    private void cancelstudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelstudentActionPerformed
        // set fields to empty if user cancels input and set focus to the first field
     Functions.ClearTextFields(errorMsgSt, inputstid, inputstname);
    }//GEN-LAST:event_cancelstudentActionPerformed

    private void addinstructorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addinstructorActionPerformed
        // add proffesor if all input fields are not empty
        String insId = inputinsid.getText();
        String insName = inputinsname.getText();
        
        if(insId.length()<=0 || insName.length()<=0){
        
            errorMsgIns.setVisible(true);
            errorMsgIns.setText("All field inputs are required");
        }
        
        else{
        errorMsgIns.setVisible(false);
        
        Instructor instructor = new Instructor();
        instructor.setInst_id(insId);
        instructor.setName(insName);
        
        Functions.AddElementToList( proffesorList, instructor.StringData());
          Functions.ClearTextFields(errorMsgIns, inputinsid, inputinsname);
          univ.getInstructors().add(instructor);
        }
         
    }//GEN-LAST:event_addinstructorActionPerformed

    private void cancelinstructorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelinstructorActionPerformed
          // set fields to empty if user cancels input and set focus to the first field
       Functions.ClearTextFields(errorMsgIns, inputinsid, inputinsname);
    }//GEN-LAST:event_cancelinstructorActionPerformed

    private void deletestudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletestudentActionPerformed
        // delete student
        Functions.DeleteElementsFromList(studentList, errorMsgSt);
    }//GEN-LAST:event_deletestudentActionPerformed

    private void studentListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_studentListValueChanged
        // set error message not visible when we select a list item
        errorMsgSt.setVisible(false);
           
        //place selected object atributes to text fields
              int index = studentList.getSelectedIndex();
        
        if(index >= 0){
            
            String lstData = studentList.getModel().getElementAt(index);
            //identify student in the list collection
            inputstid.setText(lstData.substring(0,lstData.indexOf(" ")));
            String id = lstData.substring(0,lstData.indexOf(" "));
            
            int indexStudent = -1;
            for(int i=0; i<univ.getStudents().size(); i++){
            
                Student st = univ.getStudents().get(i);
                
                if(st.getSt_id().equalsIgnoreCase(id)){
                
                    indexStudent = i;
                    break;
                }
            }
            
            Student s = univ.getStudents().get(indexStudent);
            inputstid.setText(s.getSt_id());
            inputstname.setText(s.getName());
        }
    }//GEN-LAST:event_studentListValueChanged

    private void deleteproffesorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteproffesorActionPerformed
        // delete proffesor
           Functions.DeleteElementsFromList(proffesorList, errorMsgIns);
    }//GEN-LAST:event_deleteproffesorActionPerformed

    private void proffesorListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_proffesorListValueChanged
          // set error message not visible when we select a list item
        errorMsgIns.setVisible(false);
        
        // place selected object attributes in the textfields
        int index = proffesorList.getSelectedIndex();
        
        if(index >= 0){
        String lstData = proffesorList.getModel().getElementAt(index);
        //identify proffesor in the list collection
        inputinsid.setText(lstData.substring(0, lstData.indexOf(" ")));
        String id = lstData.substring(0, lstData.indexOf(" "));
         
        int indexProffesor = -1;
        
        for(int i=0; i<univ.getInstructors().size(); i++){
        
            Instructor inst = univ.getInstructors().get(i);
            
            if(inst.getInst_id().equalsIgnoreCase(id)){
                
            indexProffesor = i;
            break;
          }
        }
        Instructor ins = univ.getInstructors().get(indexProffesor);
        inputinsid.setText(ins.getInst_id());
        inputinsname.setText(ins.getName());
      } 
    }//GEN-LAST:event_proffesorListValueChanged

    private void updatestudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatestudentActionPerformed
        // update student information
            int indexStudent = -1;
            for(int i=0; i<univ.getStudents().size(); i++){
            
                Student st = univ.getStudents().get(i);
                
                if(st.getSt_id().equalsIgnoreCase(inputstid.getText())){
                
                    indexStudent = i;
                    break;
                }
            }     
            
              univ.getStudents().get(indexStudent).setSt_id(inputstid.getText());
              univ.getStudents().get(indexStudent).setName(inputstname.getText());
       
              DefaultListModel dm = new DefaultListModel();
       
              for(int i=0; i<univ.getStudents().size(); i++){
        
                  dm.addElement(univ.getStudents().get(i).StringData());
        }   
       
              studentList.setModel(dm);
    }//GEN-LAST:event_updatestudentActionPerformed

    private void StudentPanelComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_StudentPanelComponentShown
        // access university collection
        
        DefaultListModel dm = new DefaultListModel();
        
        for(int i=0; i< univ.getStudents().size(); i++){
        
            dm.addElement(univ.getStudents().get(i).StringData());
        }
        studentList.setModel(dm);
    }//GEN-LAST:event_StudentPanelComponentShown

    private void updateproffesorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateproffesorActionPerformed
        // update proffesor information
      int  indexProffesor = -1;
      
      for(int i=0; i<univ.getInstructors().size(); i++){
      Instructor inst = univ.getInstructors().get(i);
      if(inst.getInst_id().equalsIgnoreCase(inputinsid.getText())){
      
          indexProffesor = i;
          break;
        }
      }
      univ.getInstructors().get(indexProffesor).setInst_id(inputinsid.getText());
      univ.getInstructors().get(indexProffesor).setName(inputinsname.getText());
      
      DefaultListModel dm = new DefaultListModel();
      
      for(int i=0; i<univ.getInstructors().size(); i++){
          
      dm.addElement(univ.getInstructors().get(i).StringData());
      
      }
      proffesorList.setModel(dm);
    }//GEN-LAST:event_updateproffesorActionPerformed

    private void ProffesorPanelComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_ProffesorPanelComponentShown
        // access university collection
        
        DefaultListModel dm = new DefaultListModel();
        
        for(int i=0; i<univ.getInstructors().size(); i++){
        dm.addElement(univ.getInstructors().get(i).StringData());
        }
        proffesorList.setModel(dm);
    }//GEN-LAST:event_ProffesorPanelComponentShown

    private void managecoursesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_managecoursesActionPerformed
        // display courses panel and hide student & proffesor panels
        CoursesPanel.setVisible(true);
          updateAssignPanel.setVisible(false);
        StudentPanel.setVisible(false);
        ProffesorPanel.setVisible(false);
        assignedPanel.setVisible(false);
        assignedCoursePanel.setVisible(false);
    }//GEN-LAST:event_managecoursesActionPerformed

    private void addcourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addcourseActionPerformed
        // add courses
        
        String CoId = inputcoid.getText();
        String CoName = inputconame.getText();
        String CoCredits = inputcocredits.getText();
        
        if(CoId.length() <=0 || CoName.length() <=0 || CoCredits.length() <=0){
        
            errorMsgCo.setVisible(true);
            errorMsgCo.setText("All field inputs are required");
        } else {
        errorMsgCo.setVisible(false);
        
        //add course
        Course course = new Course();
        course.setCo_id(CoId);
        course.setCoName(CoName);
        course.setCredits(Integer.parseInt(CoCredits)); // convert string type to integer
        
        Functions.AddElementToList(courseList, course.StringData());
        Functions.ClearTextFieldsCourses(errorMsgCo, inputcoid, inputconame, inputcocredits);
        // add courses to university collection
        univ.getCourses().add(course);
        
        }
          
    }//GEN-LAST:event_addcourseActionPerformed

    private void cancelcourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelcourseActionPerformed
      // set fields to empty if user cancels input and set focus to the first field
      Functions.ClearTextFieldsCourses(errorMsgCo, inputcoid, inputconame, inputcocredits);
    }//GEN-LAST:event_cancelcourseActionPerformed

    private void deletecourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletecourseActionPerformed
        // delete courses
        Functions.DeleteElementsFromList(courseList, errorMsgCo);
    }//GEN-LAST:event_deletecourseActionPerformed

    private void courseListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_courseListValueChanged
        // set error message not visible when list item is selected
        errorMsgCo.setVisible(false);
        
              //place selected object atributes to text fields
              int index = courseList.getSelectedIndex();
        
        if(index >= 0){
            
            String lstData = courseList.getModel().getElementAt(index);
            //identify student in the list collection
            inputcoid.setText(lstData.substring(0,lstData.indexOf(" ")));
            String id = lstData.substring(0,lstData.indexOf(" "));
            
            int indexCourse = -1;
            for(int i=0; i<univ.getCourses().size(); i++){
            
                Course cou = univ.getCourses().get(i);
                
                if(cou.getCo_id().equalsIgnoreCase(id)){
                
                    indexCourse = i;
                    break;
                }
            }
            
            Course co = univ.getCourses().get(indexCourse);
            inputcoid.setText(co.getCo_id());
            inputconame.setText(co.getCoName());
            inputcocredits.setText(String.valueOf(co.getCredits())); // convert int to String
        }
    }//GEN-LAST:event_courseListValueChanged

    private void CoursesPanelComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_CoursesPanelComponentShown
        // access university collection
        
        DefaultListModel dm = new DefaultListModel();
        
        for(int i=0; i<univ.getCourses().size(); i++){
        dm.addElement(univ.getCourses().get(i).StringData());
        }
        courseList.setModel(dm);
    }//GEN-LAST:event_CoursesPanelComponentShown

    private void updatecourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatecourseActionPerformed
          // update course information
      int  indexCourse = -1;
      
      for(int i=0; i<univ.getCourses().size(); i++){
      Course cou = univ.getCourses().get(i);
      if(cou.getCo_id().equalsIgnoreCase(inputcoid.getText())){
      
          indexCourse= i;
          break;
        }
      }
      univ.getCourses().get(indexCourse).setCo_id(inputcoid.getText());
      univ.getCourses().get(indexCourse).setCoName(inputconame.getText());
      univ.getCourses().get(indexCourse).setCredits(Integer.parseInt(inputcocredits.getText())); //convert string to int
      
      DefaultListModel dm = new DefaultListModel();
      
      for(int i=0; i<univ.getCourses().size(); i++){
          
      dm.addElement(univ.getCourses().get(i).StringData());
      
      }
      courseList.setModel(dm);
    }//GEN-LAST:event_updatecourseActionPerformed

    private void manageassignmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manageassignmentActionPerformed
       // display assign panel and hide others
        assignedPanel.setVisible(true);
          updateAssignPanel.setVisible(false);
        StudentPanel.setVisible(false);
        ProffesorPanel.setVisible(false);
        CoursesPanel.setVisible(false);
        assignedCoursePanel.setVisible(false);
      
    }//GEN-LAST:event_manageassignmentActionPerformed

    private void assignedPanelComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_assignedPanelComponentShown
         // access university collection
        
        DefaultListModel dm = new DefaultListModel();
        
        for(int i=0; i< univ.getStudents().size(); i++){
        
            dm.addElement(univ.getStudents().get(i).StringData());
        }
        assnstudentList.setModel(dm);
        
        //populate proffesor assign list
        
          DefaultListModel dlm = new DefaultListModel();
        
        for(int i=0; i< univ.getInstructors().size(); i++){
        
            dlm.addElement(univ.getInstructors().get(i).StringData());
        }
        assnproffesorList.setModel(dlm);
        
           DefaultListModel dlm2 = new DefaultListModel();
        
        for(int i=0; i< univ.getInstructors().size(); i++){
        
            dlm2.addElement(univ.getInstructors().get(i).StringData());
        }
        assnproffesorList2.setModel(dlm2);
    }//GEN-LAST:event_assignedPanelComponentShown

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        Instructor inst = null;
           int index = assnproffesorList.getSelectedIndex();
        
        if(index >= 0){
        String lstData = assnproffesorList.getModel().getElementAt(index);
        //identify proffesor in the list collection
  
        String id = lstData.substring(0, lstData.indexOf(" "));
         
        int indexProffesor = -1;
        
        for(int i=0; i<univ.getInstructors().size(); i++){
        
            Instructor ins = univ.getInstructors().get(i);
            
            if(ins.getInst_id().equalsIgnoreCase(id)){
                
            indexProffesor = i;
            break;
          }
        }
         inst = univ.getInstructors().get(indexProffesor);
        
      int [] indexArray = assnstudentList.getSelectedIndices();
      for(int i=0; i<indexArray.length; i++){
          
        if(indexArray[i]>= 0){
        String lstDatast = assnstudentList.getModel().getElementAt(indexArray[i]);
        //identify proffesor in the list collection
  
        String idst = lstDatast.substring(0, lstDatast.indexOf(" "));
         
        int indexStudent = -1;
        
        for(int j=0; j<univ.getStudents().size(); j++){
        
            Student st = univ.getStudents().get(j);
            
            if(st.getSt_id().equalsIgnoreCase(idst)){
                
            indexStudent = j;
            break;
          }
        }
        Student st = univ.getStudents().get(indexStudent);
        
        inst.getStudents().add(st);
     
        
             
         }
            
       }
      Functions.DeleteSelectedListElements(assnstudentList, indexArray);
     }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void assnproffesorList2ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_assnproffesorList2ValueChanged
        // place selected object attributes in the textfields
        int index = assnproffesorList2.getSelectedIndex();
        
        if(index >= 0){
        String lstData = proffesorList.getModel().getElementAt(index);
        //identify proffesor in the list collection
        String id = lstData.substring(0, lstData.indexOf(" "));
         
        int indexProffesor = -1;
        
        for(int i=0; i<univ.getInstructors().size(); i++){
        
            Instructor inst = univ.getInstructors().get(i);
            
            if(inst.getInst_id().equalsIgnoreCase(id)){
                
            indexProffesor = i;
            break;
          }
        }
        Instructor ins = univ.getInstructors().get(indexProffesor);
     
        DefaultListModel dlm = new DefaultListModel();
        
        for(int i=0; i<ins.getStudents().size();i++){
            Student st = ins.getStudents().get(i);
            dlm.addElement(st.StringData());
        }
        
        assnstudentList2.setModel(dlm); 
      } 
        
    }//GEN-LAST:event_assnproffesorList2ValueChanged

    private void managecourseassignmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_managecourseassignmentActionPerformed
          // display assign courses panel and hide others
        assignedCoursePanel.setVisible(true);
        updateAssignPanel.setVisible(false);
        assignedPanel.setVisible(false);
        StudentPanel.setVisible(false);
        ProffesorPanel.setVisible(false);
        CoursesPanel.setVisible(false);
      
    }//GEN-LAST:event_managecourseassignmentActionPerformed

    private void assignedCoursePanelComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_assignedCoursePanelComponentShown
         // access university collection
        
        DefaultListModel dm = new DefaultListModel();
        
        for(int i=0; i< univ.getCourses().size(); i++){
        
            dm.addElement(univ.getCourses().get(i).StringData());
        }
        assncoursesList.setModel(dm);
        
        //populate proffesor assign list
        
          DefaultListModel dlm = new DefaultListModel();
        
        for(int i=0; i< univ.getInstructors().size(); i++){
        
            dlm.addElement(univ.getInstructors().get(i).StringData());
        }
        assncoursesproffesorList.setModel(dlm);
        
           DefaultListModel dlm2 = new DefaultListModel();
        
        for(int i=0; i< univ.getInstructors().size(); i++){
        
            dlm2.addElement(univ.getInstructors().get(i).StringData());
        }
        assncoursesproffesorList2.setModel(dlm2);
    }//GEN-LAST:event_assignedCoursePanelComponentShown

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
        Instructor inst = null;
           int index = assncoursesproffesorList.getSelectedIndex();
        
        if(index >= 0){
        String lstData = assncoursesproffesorList.getModel().getElementAt(index);
        //identify proffesor in the list collection
  
        String id = lstData.substring(0, lstData.indexOf(" "));
         
        int indexProffesor = -1;
        
        for(int i=0; i<univ.getInstructors().size(); i++){
        
            Instructor ins = univ.getInstructors().get(i);
            
            if(ins.getInst_id().equalsIgnoreCase(id)){
                
            indexProffesor = i;
            break;
          }
        }
         inst = univ.getInstructors().get(indexProffesor);
        
      int [] indexArray = assncoursesList.getSelectedIndices();
      for(int i=0; i<indexArray.length; i++){
          
        if(indexArray[i]>= 0){
        String lstDatast = assncoursesList.getModel().getElementAt(indexArray[i]);
        //identify proffesor in the list collection
  
        String idco = lstDatast.substring(0, lstDatast.indexOf(" "));
         
        int indexCourse = -1;
        
        for(int j=0; j<univ.getCourses().size(); j++){
        
            Course co = univ.getCourses().get(j);
            
            if(co.getCo_id().equalsIgnoreCase(idco)){
                
            indexCourse = j;
            break;
          }
        }
        Course co = univ.getCourses().get(indexCourse);
        
        inst.getCourses().add(co);
        
        for(int k=0; k<inst.getCourses().size(); k++){
            
            Course cou = inst.getCourses().get(k);
       // Functions.DeleteSelectedListElements(assncoursesList, cou);
        
        
             }
         }
       }
     }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void assncoursesproffesorList2ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_assncoursesproffesorList2ValueChanged
      // place selected object attributes in the textfields
        int index = assncoursesproffesorList2.getSelectedIndex();
        
        if(index >= 0){
        String lstData = proffesorList.getModel().getElementAt(index);
        //identify proffesor in the list collection
        String id = lstData.substring(0, lstData.indexOf(" "));
         
        int indexProffesor = -1;
        
        for(int i=0; i<univ.getInstructors().size(); i++){
        
            Instructor inst = univ.getInstructors().get(i);
            
            if(inst.getInst_id().equalsIgnoreCase(id)){
                
            indexProffesor = i;
            break;
          }
        }
        Instructor ins = univ.getInstructors().get(indexProffesor);
     
        DefaultListModel dlm = new DefaultListModel();
        
        for(int i=0; i<ins.getCourses().size();i++){
            Course co = ins.getCourses().get(i);
            dlm.addElement(co.StringData());
        }
        
        assncoursesList2.setModel(dlm); 
      } 
        
    }//GEN-LAST:event_assncoursesproffesorList2ValueChanged

    private void updateAssignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateAssignActionPerformed
        // TODO add your handling code here:
        updateAssignPanel.setVisible(true);
        assignedCoursePanel.setVisible(false);
        assignedPanel.setVisible(false);
        StudentPanel.setVisible(false);
        ProffesorPanel.setVisible(false);
        CoursesPanel.setVisible(false);
      
    }//GEN-LAST:event_updateAssignActionPerformed

    private void ProfessorComboBoxComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_ProfessorComboBoxComponentShown
        //
        
       
    }//GEN-LAST:event_ProfessorComboBoxComponentShown

    private void updateAssignPanelComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_updateAssignPanelComponentShown
        // TODO add your handling code here:
            // access university collection
            
        DefaultComboBoxModel dm = new  DefaultComboBoxModel();
        
        for(int i=0; i<univ.getInstructors().size(); i++){
        dm.addElement(univ.getInstructors().get(i).StringData());
        }
        ProfessorComboBox.setModel(dm);
         
     DefaultComboBoxModel dlm = new  DefaultComboBoxModel();
        
        for(int i=0; i<univ.getStudents().size();i++){
            Student st = univ.getStudents().get(i);
            dlm.addElement(st.StringData());
        }
        
        jList1.setModel(dlm); 
    }//GEN-LAST:event_updateAssignPanelComponentShown

    private void ProfessorComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProfessorComboBoxActionPerformed
   
       
        int index = ProfessorComboBox.getSelectedIndex();
        
        if(index >= 0){
        String lstData = proffesorList.getModel().getElementAt(index);
        //identify proffesor in the list collection
        String id = lstData.substring(0, lstData.indexOf(" "));
         
        int indexProffesor = -1;
        
        for(int i=0; i<univ.getInstructors().size(); i++){
        
            Instructor inst = univ.getInstructors().get(i);
            
            if(inst.getInst_id().equalsIgnoreCase(id)){
                
            indexProffesor = i;
            break;
          }
        }
        Instructor ins = univ.getInstructors().get(indexProffesor);
     
        DefaultListModel dlm = new DefaultListModel();
        
        for(int i=0; i<ins.getStudents().size();i++){
            Student st = ins.getStudents().get(i);
            dlm.addElement(st.StringData());
        }
        
        jList1.setModel(dlm); 
      } 
        
        
      /*  DefaultListModel dlm = new DefaultListModel();
      int index = ProfessorComboBox.getSelectedIndex();
      
      for(int j=0; j<index; j++){
          System.out.println("Klasa: " + prof[j].getClass().getName());
          Instructor ins = (Instructor)prof[j];
        for(int i=0; i<ins.getStudents().size();i++){
            Student st = ins.getStudents().get(i);
            dlm.addElement(st.StringData());
        }
        
        }
        jList1.setModel(dlm); 
    */
        
    }//GEN-LAST:event_ProfessorComboBoxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UniversityGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UniversityGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UniversityGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UniversityGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UniversityGui().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel CoursesPanel;
    private javax.swing.JComboBox<String> ProfessorComboBox;
    private javax.swing.JPanel ProffesorPanel;
    private javax.swing.JPanel StudentPanel;
    private javax.swing.JButton addcourse;
    private javax.swing.JButton addinstructor;
    private javax.swing.JButton addstudent;
    private javax.swing.JPanel assignedCoursePanel;
    private javax.swing.JPanel assignedPanel;
    private javax.swing.JList<String> assncoursesList;
    private javax.swing.JList<String> assncoursesList2;
    private javax.swing.JList<String> assncoursesproffesorList;
    private javax.swing.JList<String> assncoursesproffesorList2;
    private javax.swing.JList<String> assnproffesorList;
    private javax.swing.JList<String> assnproffesorList2;
    private javax.swing.JList<String> assnstudentList;
    private javax.swing.JList<String> assnstudentList2;
    private javax.swing.JButton cancelcourse;
    private javax.swing.JButton cancelinstructor;
    private javax.swing.JButton cancelstudent;
    private javax.swing.JList<String> courseList;
    private javax.swing.JButton deletecourse;
    private javax.swing.JButton deleteproffesor;
    private javax.swing.JButton deletestudent;
    private javax.swing.JLabel entercocredits;
    private javax.swing.JLabel entercoid;
    private javax.swing.JLabel enterconame;
    private javax.swing.JLabel enterinsid;
    private javax.swing.JLabel enterinsname;
    private javax.swing.JLabel enterstid;
    private javax.swing.JLabel enterstname;
    private javax.swing.JLabel errorMsgCo;
    private javax.swing.JLabel errorMsgIns;
    private javax.swing.JLabel errorMsgSt;
    private javax.swing.JTextField inputcocredits;
    private javax.swing.JTextField inputcoid;
    private javax.swing.JTextField inputconame;
    private javax.swing.JTextField inputinsid;
    private javax.swing.JTextField inputinsname;
    private javax.swing.JTextField inputstid;
    private javax.swing.JTextField inputstname;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JList<String> jList1;
    private javax.swing.JList<String> jList2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JMenuItem manageassignment;
    private javax.swing.JMenuItem managecourseassignment;
    private javax.swing.JMenuItem managecourses;
    private javax.swing.JMenuItem manageproffesor;
    private javax.swing.JMenuItem managestudent;
    private javax.swing.JList<String> proffesorList;
    private javax.swing.JList<String> studentList;
    private javax.swing.JMenuItem updateAssign;
    private javax.swing.JPanel updateAssignPanel;
    private javax.swing.JButton updatecourse;
    private javax.swing.JButton updateproffesor;
    private javax.swing.JButton updatestudent;
    // End of variables declaration//GEN-END:variables
}
